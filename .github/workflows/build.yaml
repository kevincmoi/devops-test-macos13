name: test MacOS 13

on:
  push:
    branches:
      - build

jobs:
  Variables:
    name: Set variables
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v3
      - name: Get common variables
        id: common_vars
        uses: CumulusDS/get-yaml-paths-action@v1.0.1
        with:
          file: .github/workflows/config/env.test.yml
          var: test
          xcodeVersion: xcode.version
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ steps.common_vars.outputs.xcodeVersion }}
      - name: check OSX version
        run: sw_vers --productVersion
      - name: show Xcode version
        run: echo xcodebuild -version #| grep "Xcode_\d{0,2}(\.\d{1,2})"
      - name: Failed switch Xcode if not equals
        if: ${{ false }} # change to ${{ xcodebuildVersion == steps.common_vars.outputs.xcodeVersion }}
        run: exit 1
  Localization:
    name: Get localization files
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v3
      - name: curl localization files
        run: echo "curl localization files"


  Build:
    name: Build IOS App
    needs:
      - Variables
      - Localization
    runs-on: macos-13
    steps:
      - uses: actions/checkout@master
      #      - uses: apple-actions/import-codesign-certs@v2
      #        with:
      #          p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
      #          p12-password: ${{ secrets.CERTIFICATES_P12_PASSWORD }}
      #          p12-filepath: $RUNNER_TEMP/build_certificate.p12
      #          keychain-password: ${{ secrets.KEYCHAIN_PASSWORD }}
      #          keychain: $RUNNER_TEMP/app-signing.keychain-db
      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.CERTIFICATES_P12 }}
          P12_PASSWORD: ${{ secrets.CERTIFICATES_P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.PROVISIONING_PROFILE }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
          
          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH
          
          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          
          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH
          
          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
      - name: build app
        run: xcodebuild clean build
      #      - name: show permission runner workspace
      #        run: ls -la ${{ runner.workspace }}
      #      - uses: actions/cache/restore@v3
      #        id: cache-restore
      #        with:
      #          path: ${{ runner.workspace }}
      #          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
      #      - name: first check download artifact
      #        run: ls -l ${{ runner.workspace }}/cache
      - uses: actions/download-artifact@master
        with:
          name: artifact
          path: ${{ runner.workspace }}
      - name: second check download artifact
        run: ls -l ${{ runner.workspace }}